#!/usr/bin/env node

/**
 * This script parses index.html and sets the version query string of each
 * resource to be the MD5 hash of that resource.
 */

const fs = require('fs');
const crypto = require('crypto');
const child_process = require('child_process');
const Config = require('./config/config');
const express = require('express');
const app = express();

process.chdir(__dirname);

if (process.argv[2] === 'full') {
	child_process.execSync('../sigmatic-showdown.win:8080/build-tools/build-indexes', {stdio: 'inherit'});
}

function updateFiles() {
	let indexContents = fs.readFileSync('index.template.php', {encoding: 'utf8'});

	// add hashes to js and css files
	process.stdout.write("Updating hashes... ");
	indexContents = indexContents.replace(/(src|href)="\/(.*?)\?[a-z0-9]*?"/g, function (a, b, c) {
		let hash = Math.random(); // just in case creating the hash fails
		try {
			var filepath = c;
			if (c.includes('/sigmatic-showdown.win:8080/')) {
				const filename = c.replace('/sigmatic-showdown.win:8080/', '');
				filepath = '../sigmatic-showdown.win:8080/' + filename;
			}
			const fstr = fs.readFileSync(filepath, {encoding: 'utf8'});
			hash = crypto.createHash('md5').update(fstr).digest('hex').substr(0, 8);
		} catch (e) {}

		return b + '="/' + c + '?' + hash + '"';
	});
	indexContents = indexContents.replace(/(src|href)="(.*?)\/(.*?)[a-z0-9]*?"/g, (match) => replaceRoutes(match));
	console.log("DONE");

	process.stdout.write("Writing new `index.php` file... ");
	fs.writeFileSync('index.php', indexContents);
	console.log("DONE");
}

function replaceRoutes(url) {
	return url.replace('/esigmatic-showdown.win:8080/', '/' + Config.routes.replays + '/')
		.replace('/sigmatic-showdown.win:8080/', '/' + Config.routes.client + '/')
		.replace('/pokemonshowdown.com/', '/' + Config.routes.root + '/');
}

updateFiles();

child_process.execSync('node ./cms/build', {stdio: 'inherit'});
